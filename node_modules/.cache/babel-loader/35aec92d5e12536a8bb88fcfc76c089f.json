{"ast":null,"code":"var _jsxFileName = \"/home/brizy/Documents/MyApp/test/ebs-fe-test/src/components/Products.tsx\";\nimport { ProductContext } from 'context';\nimport React, { useContext } from 'react';\nimport { useState } from 'react';\nimport { useMemo } from 'react';\nexport const Products = () => {\n  const {\n    products,\n    addToCart,\n    removeFromCart\n  } = useContext(ProductContext);\n  const [sortState, setSortState] = useState({\n    key: 0,\n    direction: ''\n  }); // useEffect(() => {\n  //   fetchProducts();\n  // }, [fetchProducts]);\n\n  const sortedItems = useMemo(() => {\n    let sortableProducts = [...products]; // if (sortState !== null) {\n    //   sortableProducts.sort((a, b) => {\n    //     if (a[sortState.key] < b[sortState.key]) {\n    //       return sortState.direction === 'ascending' ? -1 : 1;\n    //     }\n    //     if (a[sortState.key] > b[sortState.key]) {\n    //       return sortState.direction === 'ascending' ? 1 : -1;\n    //     }\n    //     return 0;\n    //   });\n    // }\n\n    return sortableProducts;\n  }, [sortState, products]);\n\n  const handleSort = key => {\n    let direction = 'ascending';\n\n    if (sortState && sortState.key === key && sortState.direction === 'ascending') {\n      direction = 'descending';\n    }\n\n    setSortState({\n      key,\n      direction\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      margin: '50px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }\n  }, \"ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }\n  }, \"NAME\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 15\n    }\n  }, \"CATEGORY\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => handleSort('price'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 15\n    }\n  }, \"PRICE\")), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }\n  }, \"ACTIONS\")), sortedItems.map(product => {\n    return /*#__PURE__*/React.createElement(\"tr\", {\n      key: product.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, product.id), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }\n    }, \" \", product.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }\n    }, \" \", product.category.name), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }\n    }, \"$\", product.price), /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => removeFromCart(product.id),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 19\n      }\n    }, \"-\"), \" Select\", ' ', \"//@ts-expect-error\", /*#__PURE__*/React.createElement(\"button\", {\n      onClick: e => addToCart(product),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 19\n      }\n    }, \"+\")));\n  }))));\n};","map":{"version":3,"names":["ProductContext","React","useContext","useState","useMemo","Products","products","addToCart","removeFromCart","sortState","setSortState","key","direction","sortedItems","sortableProducts","handleSort","margin","map","product","id","name","category","price","e"],"sources":["/home/brizy/Documents/MyApp/test/ebs-fe-test/src/components/Products.tsx"],"sourcesContent":["import { ProductContext } from 'context';\nimport React, { FC, useContext, useEffect } from 'react';\nimport { useState } from 'react';\nimport { useMemo } from 'react';\n\nexport type Sorter = {\n  key:number,\n  direction:string\n}\nexport const Products:FC = () => {\n  const { products,  addToCart, removeFromCart } = useContext(ProductContext);\n  const [sortState, setSortState] = useState<Sorter>({ key: 0, direction: '' });\n\n  // useEffect(() => {\n  //   fetchProducts();\n  // }, [fetchProducts]);\n\n  const sortedItems = useMemo(() => {\n    let sortableProducts = [...products];\n\n    // if (sortState !== null) {\n    //   sortableProducts.sort((a, b) => {\n    //     if (a[sortState.key] < b[sortState.key]) {\n    //       return sortState.direction === 'ascending' ? -1 : 1;\n    //     }\n    //     if (a[sortState.key] > b[sortState.key]) {\n    //       return sortState.direction === 'ascending' ? 1 : -1;\n    //     }\n    //     return 0;\n    //   });\n    // }\n    return sortableProducts;\n  }, [sortState, products]);\n\n  const handleSort = (key) => {\n    let direction = 'ascending';\n    if (sortState && sortState.key === key && sortState.direction === 'ascending') {\n      direction = 'descending';\n    }\n    setSortState({ key, direction });\n  };\n\n  return (\n    <div style={{ margin: '50px' }}>\n      <table>\n        <tbody>\n          <tr>\n            <th>ID</th>\n            <th>NAME</th>\n            <th>\n              <button /*onClick={() => handleSort(\"category\")}*/>CATEGORY</button>\n            </th>\n            <th>\n              <button onClick={() => handleSort('price')}>PRICE</button>\n            </th>\n            <th>ACTIONS</th>\n          </tr>\n          {sortedItems.map((product) => {\n            return (\n              <tr key={product.id}>\n                <td>{product.id}</td>\n                <td> {product.name}</td>\n                <td> {product.category.name}</td>\n                <td>${product.price}</td>\n                <td>\n                  <button onClick={(e) => removeFromCart(product.id)}>-</button> Select{' '}\n                  //@ts-expect-error\n                  <button onClick={(e) => addToCart(product)}>+</button>\n                </td>\n              </tr>\n            );\n          })}\n        </tbody>\n      </table>\n    </div>\n  );\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}