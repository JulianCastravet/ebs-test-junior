{"ast":null,"code":"var _jsxFileName = \"/home/brizy/Documents/MyApp/test/ebs-fe-test/src/context.tsx\";\nimport React, { createContext, useState } from 'react';\nconst prodConstVal = {\n  products: [],\n  cartItems: [],\n  fetchProducts: () => {},\n  addToCart: () => {},\n  removeFromCart: () => {}\n};\nexport const ProductContext = createContext(prodConstVal);\nexport const ProductsProvider = _ref => {\n  let {\n    children\n  } = _ref;\n  const [products, setProducts] = useState(prodConstVal.products);\n  const [items, setItems] = useState(prodConstVal.cartItems);\n  console.log(products);\n  console.log(products);\n\n  const fetchProducts = async () => {\n    return await fetch('http://localhost:3001/api/products/').then(res => res.json()).then(data => setProducts(data));\n  };\n\n  const addToCart = newItem => {\n    setItems(prev => {\n      const foundItem = prev.find(el => el.id === newItem.id);\n\n      if (foundItem) {\n        return prev.map(el => el.id === newItem.id ? { ...el,\n          quantity: el.quantity + 1\n        } : el);\n      } else {\n        return [...prev, newItem];\n      }\n    });\n  };\n\n  const removeFromCart = productId => {\n    setItems(prev => prev.reduce((ack, item) => {\n      if (item.id === productId) {\n        if (item.quantity === 1) return ack;\n        return [...ack, { ...item,\n          quantity: item.quantity - 1\n        }];\n      } else {\n        return [...ack, item];\n      }\n    }, []));\n  };\n\n  return /*#__PURE__*/React.createElement(ProductContext.Provider, {\n    value: {\n      addToCart,\n      cartItems: items,\n      products,\n      removeFromCart,\n      fetchProducts\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, children);\n};","map":{"version":3,"names":["React","createContext","useState","prodConstVal","products","cartItems","fetchProducts","addToCart","removeFromCart","ProductContext","ProductsProvider","children","setProducts","items","setItems","console","log","fetch","then","res","json","data","newItem","prev","foundItem","find","el","id","map","quantity","productId","reduce","ack","item"],"sources":["/home/brizy/Documents/MyApp/test/ebs-fe-test/src/context.tsx"],"sourcesContent":["import { ProductContextType, Product, CartItem } from 'interfaces';\nimport React, { createContext, FC, useEffect, useState } from 'react';\n\nconst prodConstVal: ProductContextType = {\n  products: [],\n  cartItems: [],\n  fetchProducts: () => {},\n  addToCart: () => {},\n  removeFromCart: () => {},\n};\n\nexport const ProductContext = createContext<ProductContextType>(prodConstVal);\n\nexport const ProductsProvider: FC = ({ children }) => {\n  const [products, setProducts] = useState<Product[]>(prodConstVal.products);\n  const [items, setItems] = useState<CartItem[]>(prodConstVal.cartItems);\n  console.log(products)\n  console.log(products)\n\n  const fetchProducts = async () => {\n    return await fetch('http://localhost:3001/api/products/')\n      .then((res) => res.json())\n      .then((data) => setProducts(data));\n  };\n\n  const addToCart = (newItem: CartItem) => {\n    setItems((prev) => {\n      const foundItem = prev.find((el) => el.id === newItem.id);\n      if (foundItem) {\n        return prev.map((el) => (el.id === newItem.id ? { ...el, quantity: el.quantity + 1 } : el));\n      } else {\n        return [...prev, newItem];\n      }\n    });\n  };\n\n  const removeFromCart = (productId: number) => {\n    setItems((prev) =>\n      prev.reduce((ack, item) => {\n        if (item.id === productId) {\n          if (item.quantity === 1) return ack;\n          return [...ack, { ...item, quantity: item.quantity - 1 }];\n        } else {\n          return [...ack, item];\n        }\n      }, [] as CartItem[]),\n    );\n  };\n\n  return (\n    <ProductContext.Provider value={{ addToCart, cartItems: items, products, removeFromCart, fetchProducts }}>\n      {children}\n    </ProductContext.Provider>\n  );\n};\n"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,aAAhB,EAA8CC,QAA9C,QAA8D,OAA9D;AAEA,MAAMC,YAAgC,GAAG;EACvCC,QAAQ,EAAE,EAD6B;EAEvCC,SAAS,EAAE,EAF4B;EAGvCC,aAAa,EAAE,MAAM,CAAE,CAHgB;EAIvCC,SAAS,EAAE,MAAM,CAAE,CAJoB;EAKvCC,cAAc,EAAE,MAAM,CAAE;AALe,CAAzC;AAQA,OAAO,MAAMC,cAAc,GAAGR,aAAa,CAAqBE,YAArB,CAApC;AAEP,OAAO,MAAMO,gBAAoB,GAAG,QAAkB;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EACpD,MAAM,CAACP,QAAD,EAAWQ,WAAX,IAA0BV,QAAQ,CAAYC,YAAY,CAACC,QAAzB,CAAxC;EACA,MAAM,CAACS,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAaC,YAAY,CAACE,SAA1B,CAAlC;EACAU,OAAO,CAACC,GAAR,CAAYZ,QAAZ;EACAW,OAAO,CAACC,GAAR,CAAYZ,QAAZ;;EAEA,MAAME,aAAa,GAAG,YAAY;IAChC,OAAO,MAAMW,KAAK,CAAC,qCAAD,CAAL,CACVC,IADU,CACJC,GAAD,IAASA,GAAG,CAACC,IAAJ,EADJ,EAEVF,IAFU,CAEJG,IAAD,IAAUT,WAAW,CAACS,IAAD,CAFhB,CAAb;EAGD,CAJD;;EAMA,MAAMd,SAAS,GAAIe,OAAD,IAAuB;IACvCR,QAAQ,CAAES,IAAD,IAAU;MACjB,MAAMC,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAWC,EAAD,IAAQA,EAAE,CAACC,EAAH,KAAUL,OAAO,CAACK,EAApC,CAAlB;;MACA,IAAIH,SAAJ,EAAe;QACb,OAAOD,IAAI,CAACK,GAAL,CAAUF,EAAD,IAASA,EAAE,CAACC,EAAH,KAAUL,OAAO,CAACK,EAAlB,GAAuB,EAAE,GAAGD,EAAL;UAASG,QAAQ,EAAEH,EAAE,CAACG,QAAH,GAAc;QAAjC,CAAvB,GAA8DH,EAAhF,CAAP;MACD,CAFD,MAEO;QACL,OAAO,CAAC,GAAGH,IAAJ,EAAUD,OAAV,CAAP;MACD;IACF,CAPO,CAAR;EAQD,CATD;;EAWA,MAAMd,cAAc,GAAIsB,SAAD,IAAuB;IAC5ChB,QAAQ,CAAES,IAAD,IACPA,IAAI,CAACQ,MAAL,CAAY,CAACC,GAAD,EAAMC,IAAN,KAAe;MACzB,IAAIA,IAAI,CAACN,EAAL,KAAYG,SAAhB,EAA2B;QACzB,IAAIG,IAAI,CAACJ,QAAL,KAAkB,CAAtB,EAAyB,OAAOG,GAAP;QACzB,OAAO,CAAC,GAAGA,GAAJ,EAAS,EAAE,GAAGC,IAAL;UAAWJ,QAAQ,EAAEI,IAAI,CAACJ,QAAL,GAAgB;QAArC,CAAT,CAAP;MACD,CAHD,MAGO;QACL,OAAO,CAAC,GAAGG,GAAJ,EAASC,IAAT,CAAP;MACD;IACF,CAPD,EAOG,EAPH,CADM,CAAR;EAUD,CAXD;;EAaA,oBACE,oBAAC,cAAD,CAAgB,QAAhB;IAAyB,KAAK,EAAE;MAAE1B,SAAF;MAAaF,SAAS,EAAEQ,KAAxB;MAA+BT,QAA/B;MAAyCI,cAAzC;MAAyDF;IAAzD,CAAhC;IAAA;IAAA;MAAA;MAAA;MAAA;IAAA;EAAA,GACGK,QADH,CADF;AAKD,CAzCM"},"metadata":{},"sourceType":"module"}